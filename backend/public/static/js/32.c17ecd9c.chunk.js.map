{"version":3,"sources":["components/Page.js","pages/PaymentPage.js"],"names":["Page","forwardRef","ref","children","title","other","propTypes","PropTypes","node","isRequired","string","axios","require","PaymentPage","data","useSelector","state","profileReducer","useState","QR","setQR","error","setError","image","setImage","navigate","useNavigate","workId","useParams","fileChangeHandler","file","console","log","Promise","resolve","reject","reader","FileReader","onload","event","target","result","readAsDataURL","fileToDataUri","then","dataUri","useEffect","vpa","post","id","res","upiqr","payeeVPA","payeeName","fname","lname","amount","upi","qr","intent","catch","err","maxWidth","container","spacing","item","xs","sm","md","align","variant","src","sx","width","height","alignSelf","alt","pt","direction","alignItems","justifyContent","htmlFor","icon","style","display","accept","type","capture","onChange","files","severity","size","onClick"],"mappings":"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","file":"static/js/32.c17ecd9c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useState, useEffect } from 'react';\nimport upiqr from 'upiqr';\n// import { useCookies } from 'react-cookie';\nimport { useNavigate, useParams } from 'react-router-dom';\n// import { Icon } from '@iconify/react';\nimport { Grid, Container, Typography, Avatar, Stack, Button, Alert, Box } from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { Icon } from '@iconify/react';\n\nimport Page from '../components/Page';\n\nconst axios = require('axios');\n\nexport default function PaymentPage() {\n    const data = useSelector((state) => state.profileReducer);\n    // const [servData, setServData] = useState('');\n    const [QR, setQR] = useState('');\n    const [error, setError] = useState(false);\n    const [image, setImage] = useState('');\n    const navigate = useNavigate();\n    const { workId } = useParams();\n\n    const fileToDataUri = (file) =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                resolve(event.target.result);\n            };\n\n            reader.readAsDataURL(file);\n        });\n    const fileChangeHandler = (file) => {\n        if (!file) {\n            setImage('');\n            return;\n        }\n        console.log('def', file);\n        fileToDataUri(file).then((dataUri) => {\n            setImage(dataUri);\n        });\n\n        console.log('image:', image);\n    };\n\n    const onSave = () => {\n        if (image) {\n            navigate('/dashboard/work');\n        } else {\n            setError(true);\n        }\n    };\n\n    useEffect(() => {\n        console.log(data.vpa);\n\n        axios\n            .post('/users/getAmount', { id: workId })\n            .then((res) => {\n                if (res.data) {\n                    console.log(res.data);\n                    upiqr({\n                        payeeVPA: data.vpa,\n                        payeeName: `${data.fname} ${data.lname}`,\n                        amount: res.data[0].amount\n                    })\n                        .then((upi) => {\n                            console.log('upi qr', upi.qr);\n                            setQR(upi.qr);\n                            console.log('upi intent', upi.intent);\n                        })\n                        .catch((err) => {\n                            console.log(err);\n                        });\n                }\n            })\n            .catch((err) => {\n                console.log('Error', err);\n            });\n    }, [QR, workId]);\n    return (\n        <Page title=\"Payment Page\">\n            <Container maxWidth=\"xl\">\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={12} md={12} align=\"center\">\n                        <Stack spacing={2}>\n                            <Typography variant=\"h4\">Bharat QR - GPay, PhonePe, Paytm, UPI</Typography>\n                            {/* <Avatar sx={{ width: 200, height: 200, alignSelf: 'center' }} alt=\"photoURL\" variant=\"square\" /> */}\n\n                            {QR ? (\n                                <Avatar\n                                    src={QR}\n                                    sx={{ width: 250, height: 250, alignSelf: 'center' }}\n                                    alt=\"photoURL\"\n                                    variant=\"square\"\n                                />\n                            ) : (\n                                <Avatar\n                                    sx={{ width: 200, height: 200, alignSelf: 'center' }}\n                                    alt=\"photoURL\"\n                                    variant=\"square\"\n                                />\n                            )}\n                            {/* <Typography variant=\"h6\">Mobile number: {servData}</Typography> */}\n\n                            <Stack\n                                sx={{ pt: 3 }}\n                                direction=\"row\"\n                                alignItems=\"center\"\n                                justifyContent=\"space-evenly\"\n                            >\n                                <Typography variant=\"h6\">Take picture of the receipt</Typography>\n                                <>{/* eslint-disable-next-line jsx-a11y/label-has-associated-control */}</>\n                                <label htmlFor=\"icon-button-file\">\n                                    <Icon icon=\"ion:camera\" width={32} height={32} />\n                                </label>\n\n                                <input\n                                    style={{ display: 'none' }}\n                                    accept=\"image/*\"\n                                    id=\"icon-button-file\"\n                                    type=\"file\"\n                                    capture=\"environment\"\n                                    onChange={(event) => {\n                                        fileChangeHandler(event.target.files[0] || null);\n                                    }}\n                                />\n                                {image && (\n                                    <Avatar\n                                        src={image}\n                                        sx={{ width: 20, height: 20, alignSelf: 'center' }}\n                                        alt=\"photoURL\"\n                                        variant=\"square\"\n                                    />\n                                )}\n                            </Stack>\n                            {error && <Alert severity=\"warning\">Please select an image first!</Alert>}\n\n                            <Box sx={{ pt: 5 }} justifyContent=\"flex-end\">\n                                <Button\n                                    sx={{ width: '50%', alignSelf: 'center' }}\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    onClick={onSave}\n                                >\n                                    Upload Receipt\n                                </Button>\n                            </Box>\n                            <Button\n                                sx={{ width: '50%', alignSelf: 'center' }}\n                                size=\"large\"\n                                onClick={() => navigate('/dashboard/work')}\n                            >\n                                Back To Dashboard\n                            </Button>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Page>\n    );\n}\n"],"sourceRoot":""}