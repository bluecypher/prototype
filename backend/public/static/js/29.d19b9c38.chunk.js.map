{"version":3,"sources":["components/Page.js","../node_modules/@mui/material/Grid/GridContext.js","../node_modules/@mui/material/Grid/gridClasses.js","../node_modules/@mui/material/Grid/Grid.js","pages/CustomerProfile.js"],"names":["Page","forwardRef","ref","children","title","other","propTypes","PropTypes","node","isRequired","string","GridContext","React","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","direction","wrap","size","_excluded","getOffset","val","parse","parseFloat","String","replace","GridRoot","styled","name","overridesResolver","props","styles","ownerState","container","item","lg","md","sm","xl","xs","zeroMinWidth","root","_extends","boxSizing","display","flexWrap","width","margin","minWidth","theme","handleBreakpoints","propValue","output","flexDirection","indexOf","maxWidth","rowSpacing","themeSpacing","marginTop","paddingTop","columnSpacing","marginLeft","paddingLeft","breakpoints","keys","reduce","globalStyles","breakpoint","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","resolveBreakpointValues","values","columns","base","Math","round","more","fullWidth","Object","assign","up","generateGrid","Grid","inProps","element","themeProps","useThemeProps","extendSxProp","className","columnsProp","columnSpacingProp","component","rowSpacingProp","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","Provider","value","axios","require","CustomerProfile","custId","useParams","data","useSelector","state","profileReducer","useState","custInfo","setCustInfo","workPlan","setWorkPlan","workHistory","setWorkHistory","useEffect","post","spId","id","then","res","console","log","info","work","history","catch","err","justifyContent","variant","alignItems","add1","number","length","serv_name","plan","slice","work_desc","amnt","mode","work_list_id"],"mappings":"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","file":"static/js/29.d19b9c38.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { forwardRef } from 'react';\n// material\nimport { Box } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst Page = forwardRef(({ children, title = '', ...other }, ref) => (\n  <Box ref={ref} {...other}>\n    <Helmet>\n      <title>{title}</title>\n    </Helmet>\n    {children}\n  </Box>\n));\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"rowSpacing\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, ownerState) {\n  const size = ownerState[breakpoint];\n\n  if (!size) {\n    return;\n  }\n\n  let styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      flexShrink: 0,\n      maxWidth: 'none',\n      width: 'auto'\n    };\n  } else {\n    const columnsBreakpointValues = resolveBreakpointValues({\n      values: ownerState.columns,\n      base: theme.breakpoints.values\n    }); // Keep 7 significant numbers.\n\n    const width = `${Math.round(size / columnsBreakpointValues[breakpoint] * 10e7) / 10e5}%`;\n    let more = {};\n\n    if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n      const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n      if (themeSpacing !== '0px') {\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateDirection({\n  theme,\n  ownerState\n}) {\n  return handleBreakpoints({\n    theme\n  }, ownerState.direction, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\n\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacing, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      container,\n      direction,\n      item,\n      lg,\n      md,\n      sm,\n      spacing,\n      wrap,\n      xl,\n      xs,\n      zeroMinWidth\n    } = props.ownerState;\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap === 'nowrap' && {\n  flexWrap: 'nowrap'\n}, ownerState.wrap === 'reverse' && {\n  flexWrap: 'wrap-reverse'\n}), generateDirection, generateRowGap, generateColumnGap, ({\n  theme,\n  ownerState\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n  // Use side effect over immutability for better performance.\n  generateGrid(globalStyles, theme, breakpoint, ownerState);\n  return globalStyles;\n}, {}));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    spacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp = 12,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    lg = false,\n    md = false,\n    rowSpacing: rowSpacingProp,\n    sm = false,\n    spacing = 0,\n    wrap = 'wrap',\n    xl = false,\n    xs = false,\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columns = React.useContext(GridContext) || columnsProp;\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    lg,\n    md,\n    sm,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    xl,\n    xs,\n    zeroMinWidth\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const wrapChild = element => columns !== 12 ? /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: element\n  }) : element;\n\n  return wrapChild( /*#__PURE__*/_jsx(GridRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","import React, { useState, useEffect } from 'react';\n// import { useCookies } from 'react-cookie';\nimport { useParams } from 'react-router-dom';\n// import { Icon } from '@iconify/react';\nimport { Grid, Container, Typography, Stack } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\n// import bxEdit from '@iconify/icons-eva/edit-2-outline';\n\nimport Page from '../components/Page';\n\nconst axios = require('axios');\n\nexport default function CustomerProfile() {\n    const { custId } = useParams();\n    const data = useSelector((state) => state.profileReducer);\n    const [custInfo, setCustInfo] = useState({});\n    const [workPlan, setWorkPlan] = useState([]);\n    const [workHistory, setWorkHistory] = useState([]);\n    // const navigate = useNavigate();\n    useEffect(() => {\n        axios\n            .post('/users/getCustomerDetails', { custId: custId, spId: data.id })\n            .then((res) => {\n                console.log('result', res);\n                setCustInfo(res.data.info[0]);\n                setWorkPlan(res.data.work);\n                setWorkHistory(res.data.history);\n            })\n            .catch((err) => {\n                console.log('Error', err);\n            });\n    }, []);\n    return (\n        <Page title=\"Customer Profile\">\n            <Container maxWidth=\"xl\">\n                <Stack direction=\"row\" justifyContent=\"space-between\">\n                    <Typography variant=\"h4\">Customer Profile</Typography>\n\n                    {/* <IconButton onClick={onEdit} size=\"large\">\n                        <Icon icon={bxEdit} />\n                    </IconButton> */}\n                </Stack>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6} md={12} alignItems=\"center\">\n                        <Stack spacing={2}>\n                            <hr />\n                            <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n                                <Typography variant=\"h6\">Name: </Typography>\n                                <Typography variant=\"subtitle2\">{custInfo.name} </Typography>\n                            </Stack>\n                            <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n                                <Typography variant=\"h6\">Address: </Typography>\n                                <Typography variant=\"subtitle2\">{custInfo.add1} </Typography>\n                            </Stack>\n                            <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n                                <Typography variant=\"h6\">Phone number: </Typography>\n                                <Typography variant=\"subtitle2\">{custInfo.number} </Typography>\n                            </Stack>\n                            {/* <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n                                <Typography variant=\"h6\">Email:    </Typography>\n                                <Typography variant=\"subtitle2\">{data.email}  </Typography>\n                            </Stack> */}\n                            <hr />\n                            <Stack spacing={2}>\n                                <Typography variant=\"h6\">Work History</Typography>\n                                {workHistory.length ? (\n                                    workHistory.map((item) => (\n                                        <Stack key={item.work_list_id} spacing={1}>\n                                            <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n                                                <Typography variant=\"body\">{item.serv_name}</Typography>\n                                                <Typography variant=\"subtitle\">{item.plan.slice(0, 10)}</Typography>\n                                            </Stack>\n                                            <Typography variant=\"body\">{item.work_desc}</Typography>\n                                            <Stack direction=\"row\" spacing={1}>\n                                                <Typography variant=\"body\">&#8377;{item.amnt} received through</Typography>\n                                                {item.mode === 'C' ? (\n                                                    <Typography variant=\"body\">cash payment</Typography>\n                                                ) : (\n                                                    <Typography variant=\"body\">online payment</Typography>\n                                                )}\n                                            </Stack>\n                                        </Stack>\n                                    ))\n                                ) : (\n                                    <Typography variant=\"subtitle2\">Nothing to show here!!</Typography>\n                                )}\n                            </Stack>\n                            <hr />\n                            <Stack spacing={2}>\n                                <Typography variant=\"h6\">Next Calls</Typography>\n                                {workPlan.length ? (\n                                    workPlan.map((item) => (\n                                        <Stack key={item.work_list_id} spacing={1}>\n                                            <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\">\n                                                <Typography variant=\"body\">{item.serv_name} </Typography>\n                                                <Typography variant=\"subtitle\">{item.plan.slice(0, 10)}</Typography>\n                                            </Stack>\n                                            <Typography variant=\"body\">{item.work_desc}</Typography>\n                                        </Stack>\n                                    ))\n                                ) : (\n                                    <Typography variant=\"subtitle2\">Nothing to show here!!</Typography>\n                                )}\n                            </Stack>\n                            {/* <Stack direction=\"row\" justifyContent=\"space-between\" spacing={2}>\n\n                                {\n                                    servData.map((item) => (\n                                        <Stack key={item.serv_id} spacing={1}>\n                                            <Typography alignSelf='center' variant=\"subtitle2\">{item.serv_name}</Typography>\n                                        </Stack>\n                                    ))\n                                }\n                            </Stack> */}\n                            <hr />\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Page>\n    );\n}\n"],"sourceRoot":""}